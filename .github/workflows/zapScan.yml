name: OWASP ZAP Scan

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  dast:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v4

      - name: Run OWASP ZAP Baseline Scan
        env:
          NGROK_URL: ${{ secrets.NGROK_URL }}
        run: |
          mkdir -p ./zap-reports
          chmod 777 ./zap-reports

          echo "üîç Iniciando varredura de seguran√ßa em $NGROK_URL ..."

          # Executa o scan e salva o relat√≥rio JSON
          docker run \
            -v $(pwd)/zap-reports:/zap/wrk/:rw \
            ghcr.io/zaproxy/zaproxy:stable \
            zap-baseline.py \
              -t $NGROK_URL \
              -r zap-report.html \
              -J zap-report.json \
              -I

          echo "‚úÖ Varredura conclu√≠da. Verificando vulnerabilidades cr√≠ticas/altas..."
        
          HIGH_CRITICAL_COUNT=$(jq '[.site[].alerts[] | select(.risk == "High" or .risk == "Medium" or .risk == "Critical")] | length' ./zap-reports/zap-report.json)
          echo "Encontradas $HIGH_CRITICAL_COUNT vulnerabilidades de severidade alta ou cr√≠tica."

          if [ "$HIGH_CRITICAL_COUNT" -gt 0 ]; then
            echo "üö® Vulnerabilidades s√©rias detectadas. Bloqueando pipeline."
            exit 1
          fi

      - name: Upload ZAP Report
        uses: actions/upload-artifact@v4
        with:
          name: zap-dast-report
          path: ./zap-reports/zap-report.html
